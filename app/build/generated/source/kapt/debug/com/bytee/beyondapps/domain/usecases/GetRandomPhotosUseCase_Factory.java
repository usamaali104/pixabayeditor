// Generated by Dagger (https://dagger.dev).
package com.bytee.beyondapps.domain.usecases;

import com.bytee.beyondapps.domain.repositories.RandomPhotosRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRandomPhotosUseCase_Factory implements Factory<GetRandomPhotosUseCase> {
  private final Provider<RandomPhotosRepository> repositoryProvider;

  public GetRandomPhotosUseCase_Factory(Provider<RandomPhotosRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetRandomPhotosUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetRandomPhotosUseCase_Factory create(
      Provider<RandomPhotosRepository> repositoryProvider) {
    return new GetRandomPhotosUseCase_Factory(repositoryProvider);
  }

  public static GetRandomPhotosUseCase newInstance(RandomPhotosRepository repository) {
    return new GetRandomPhotosUseCase(repository);
  }
}
