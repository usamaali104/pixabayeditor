// Generated by Dagger (https://dagger.dev).
package com.bytee.beyondapps.data.di;

import com.bytee.beyondapps.data.api.PixabayNetworkClient;
import com.bytee.beyondapps.domain.repositories.RandomPhotosRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvidesApiClientFactory implements Factory<RandomPhotosRepository> {
  private final Provider<PixabayNetworkClient> pixabayNetworkClientProvider;

  public RepoModule_ProvidesApiClientFactory(
      Provider<PixabayNetworkClient> pixabayNetworkClientProvider) {
    this.pixabayNetworkClientProvider = pixabayNetworkClientProvider;
  }

  @Override
  public RandomPhotosRepository get() {
    return providesApiClient(pixabayNetworkClientProvider.get());
  }

  public static RepoModule_ProvidesApiClientFactory create(
      Provider<PixabayNetworkClient> pixabayNetworkClientProvider) {
    return new RepoModule_ProvidesApiClientFactory(pixabayNetworkClientProvider);
  }

  public static RandomPhotosRepository providesApiClient(
      PixabayNetworkClient pixabayNetworkClient) {
    return Preconditions.checkNotNullFromProvides(RepoModule.INSTANCE.providesApiClient(pixabayNetworkClient));
  }
}
